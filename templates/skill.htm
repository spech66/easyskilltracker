{{define "title"}}
    Courses
{{end}}
{{define "header"}}
{{end}}
{{define "body"}}
<div class="container text-center">
    <h1><i data-bind="attr: { class: icon }"></i> <span data-bind="text: name"></span></h1>
    <p data-bind="text: description"></p>

    <!--<table class="table table-striped">
        <thead>
            <tr>
                <th scope="col">Name</th>
                <th scope="col">Description</th>
                <th scope="col">Author</th>
                <th scope="col">Version</th>
            </tr>
        </thead>
        <tbody data-bind="foreach: courses, visible: courses().length > 0">
            <tr>
                <td>
                    <i data-bind="attr: { class: icon }"></i>
                    <a data-bind="attr: { href: '/skill/' + file(), title: name }">
                        <span data-bind="text: name"></span>
                    </a>
                </td>
                <td><span data-bind="text: description"></span></td>
                <td>
                    <a data-bind="attr: { href: url(), title: author }" target="_blank">
                        <span data-bind="text: author"></span>
                    </a>
                </td>
                <td><span data-bind="text: version"></span></td>
            </tr>
        </tbody>
    </table>-->

    From <a data-bind="attr: { href: url(), title: author }" target="_blank"><span data-bind="text: author"></span></a>. Version <span data-bind="text: version"></span>.
</div>
{{end}}
{{define "scripts"}}
<script>
    function SkillsViewModel() {
        // Data
        var self = this;
        self.name = ko.observable("xxx");
        self.description = ko.observable("");
        self.author = ko.observable("")
        self.url = ko.observable("");
        self.version = ko.observable("");
        self.icon = ko.observable("");

        // Load initial state from server, convert it to Course instances, then populate self.course
        $.getJSON("/api/skill/{{ .course }}", function(data) {
            console.log(data);
            self.name(data.name);
            self.description(data.description);
            self.author(data.author)
            self.url(data.url);
            self.version(data.version);
            self.icon(data.icon);
        });
    }

    $(function () {
        ko.applyBindings(new SkillsViewModel());
    });
</script>
{{end}}
