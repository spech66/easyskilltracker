{{define "title"}}
    Courses
{{end}}
{{define "header"}}
{{end}}
{{define "body"}}
<div class="container text-center">
    <h1><i data-bind="attr: { class: icon }"></i> <span data-bind="text: name"></span></h1>
    <p data-bind="text: description"></p>
    <p><em>Course created by <a data-bind="attr: { href: url, title: author }" target="_blank"><span data-bind="text: author"></span></a>. Version <span data-bind="text: version"></span>.</em></p>

    <div class="alert alert-success" role="alert" data-bind="visible: successMessage().length > 0">
        Saved successfully.
    </div>
    <div class="alert alert-danger" role="alert" data-bind="visible: errorMessage().length > 0, text: errorMessage">
    </div>
       
    <!-- ko foreach: groups -->
        <h2><span data-bind="text: name"></span></h2>

        <table class="table table-striped">
            <thead>
                <tr>
                    <th scope="col">Name</th>
                    <th scope="col">Description</th>
                    <th scope="col">Resources</th>
                    <th scope="col">Progress</th>
                </tr>
            </thead>
            <tbody data-bind="foreach: skills">
                <tr>
                    <td><span data-bind="text: name"></span></td>
                    <td><span data-bind="text: description"></span></td>
                    <td data-bind="foreach: resources">
                        <a data-bind="attr: { href: $data, title: $data }" target="_blank"><i class="fas fa-link"></i></a>
                    </td>
                    <td><a href="#" data-bind=" click: function(data, event) { $root.upgradeProgress($parent, data, event) }"><progress-widget params="progress: progress"></progress-widget></a></td>
                </tr>
            </tbody>
        </table>
    <!-- /ko -->
</div>
{{end}}
{{define "scripts"}}
<script>
    function SkillsViewModel() {
        // Data
        var self = this;
        self.successMessage = ko.observable("");
        self.errorMessage = ko.observable("");
        self.name = ko.observable("");
        self.description = ko.observable("");
        self.author = ko.observable("")
        self.url = ko.observable("");
        self.version = ko.observable("");
        self.icon = ko.observable("");
        self.groups = ko.observableArray([]);

        // Operation
        self.upgradeProgress = function(group, skill, event) {
            $.ajax({
                url: '/api/skill/progress/{{ .course }}',
                type: 'PATCH',
                data: {
                    group: group.order,
                    skill: skill.order
                }
            })
            .done(function(data) {
                self.getAll(); // not so performant... => TODO: use nested observables
            })
            .fail(function (jqXHR, textStatus, error) {
                self.errorMessage("Delete error: " + error);
            });
        }

        // Custom components
        ko.components.register('progress-widget', {
            viewModel: function(params) {
                var emojis = ['➖','😅','😱', '✔️'];
                this.emoji = params.progress > -1 && params.progress < 4 ? emojis[params.progress] : params.progress;
            },
            template: '<span data-bind="text: emoji"></span>'
        });

        // Load initial state from server, convert it to Course instances, then populate self.course
        self.getAll = function() {
            $.getJSON("/api/skill/{{ .course }}", function(data) {
                self.name(data.name);
                self.description(data.description);
                self.author(data.author)
                self.url(data.url);
                self.version(data.version);
                self.icon(data.icon);
                self.groups(data.groups);
            });
        }
        self.getAll();
    }

    $(function () {
        ko.applyBindings(new SkillsViewModel());
    });
</script>
{{end}}
