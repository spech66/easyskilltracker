{{define "title"}}
    Courses
{{end}}
{{define "header"}}
{{end}}
{{define "body"}}
<div class="container text-center">
    <h1><i data-bind="attr: { class: icon }"></i> <span data-bind="text: name"></span></h1>
    <p data-bind="text: description"></p>
    <p><em>Course created by <a data-bind="attr: { href: url, title: author }" target="_blank"><span data-bind="text: author"></span></a>. Version <span data-bind="text: version"></span>.</em></p>
       
    <!-- ko foreach: groups -->
        <h2><span data-bind="text: name"></span></h2>

        <table class="table table-striped">
            <thead>
                <tr>
                    <th scope="col">Name</th>
                    <th scope="col">Description</th>
                    <th scope="col">Resources</th>
                    <th scope="col">Progress</th>
                </tr>
            </thead>
            <tbody data-bind="foreach: skills">
                <tr>
                    <td><span data-bind="text: name"></span></td>
                    <td><span data-bind="text: description"></span></td>
                    <td data-bind="foreach: resources">
                        <a data-bind="attr: { href: $data, title: $data }" target="_blank"><i class="fas fa-link"></i></a>
                    </td>
                    <td><span data-bind="text: progress"></span></td>
                </tr>
            </tbody>
        </table>
    <!-- /ko -->
</div>
{{end}}
{{define "scripts"}}
<script>
    function SkillsViewModel() {
        // Data
        var self = this;
        self.name = ko.observable("xxx");
        self.description = ko.observable("");
        self.author = ko.observable("")
        self.url = ko.observable("");
        self.version = ko.observable("");
        self.icon = ko.observable("");
        self.groups = ko.observableArray([]);

        // Load initial state from server, convert it to Course instances, then populate self.course
        $.getJSON("/api/skill/{{ .course }}", function(data) {
            console.log(data);
            self.name(data.name);
            self.description(data.description);
            self.author(data.author)
            self.url(data.url);
            self.version(data.version);
            self.icon(data.icon);
            self.groups(data.groups);
        });
    }

    $(function () {
        ko.applyBindings(new SkillsViewModel());
    });
</script>
{{end}}
